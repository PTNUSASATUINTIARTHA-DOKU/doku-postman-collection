{
	"info": {
		"_postman_id": "4df8ad49-b797-48b8-a514-cf6ab2a86974",
		"name": "Jokul Sub Account",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Accounts",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var key = \"SK-66gGmm9iHQurcc96pDIl\";",
							"var clientid = \"MCH-0008-8556643785417\";",
							"var requestid = _.random(1, 100000);",
							"var timestamp = new Date().toISOString().slice(0, 19)+\"Z\";",
							"var targetPath = \"/sac-merchant-api/v1/accounts\";",
							"",
							"function generatePayCodeSignature(jsonBody, key, client, req, tgl, target) {",
							"    var digestSHA256 = CryptoJS.SHA256(CryptoJS.enc.Utf8.parse(jsonBody));",
							"    var digestBase64 = CryptoJS.enc.Base64.stringify(digestSHA256);",
							"    console.log('Komponen Digest: ' + jsonBody)",
							"    console.log('Digest sha256: ' + digestSHA256)",
							"    console.log('Digest: ' + digestBase64)",
							"    var signatureComponents = 'Client-Id:' + client +'\\n'+",
							"    'Request-Id:' + req +'\\n'+",
							"    'Request-Timestamp:' + tgl + '\\n'+",
							"    'Request-Target:'+ target + '\\n'+",
							"    'Digest:' + digestBase64;",
							"    var signatureHmacSha256 = CryptoJS.HmacSHA256(signatureComponents,key);",
							"    var signatureBase64 = CryptoJS.enc.Base64.stringify(signatureHmacSha256);",
							"    console.log('Komponen signature: ' + signatureComponents)",
							"    console.log('signature hmacSHA256: ' + signatureHmacSha256)",
							"    console.log('Signature: ' + signatureBase64)",
							"    return ('HMACSHA256='+signatureBase64); ",
							"}",
							"",
							"var signature = generatePayCodeSignature(pm.request.body, key, clientid, requestid, timestamp, targetPath);",
							"var Header = require('postman-collection').Header",
							"pm.environment.set(\"Client_Id\", clientid);",
							"pm.environment.set(\"Request_Id\", requestid);",
							"pm.environment.set(\"Signature\", signature);",
							"pm.environment.set(\"Request-Timestamp\", timestamp);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Client-Id",
						"value": "{{Client_Id}}",
						"type": "text"
					},
					{
						"key": "Request-Id",
						"value": "{{Request_Id}}",
						"type": "text"
					},
					{
						"key": "Signature",
						"value": "{{Signature}}",
						"type": "text"
					},
					{
						"key": "Request-Timestamp",
						"value": "{{Request-Timestamp}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"account\": {\n\t\t\"email\": \"merchant+test3@doku.com\",\n\t\t\"type\": \"standart\",\n\t\t\"name\": \"Merchant Test 3\"\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_uat}}/sac-merchant-api/v1/accounts",
					"host": [
						"{{api_uat}}"
					],
					"path": [
						"sac-merchant-api",
						"v1",
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Payouts",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var key = \"SK-66gGmm9iHQurcc96pDIl\";",
							"var clientid = \"MCH-0008-8556643785417\";",
							"var requestid = _.random(1, 100000);",
							"var timestamp = new Date().toISOString().slice(0, 19)+\"Z\";",
							"var targetPath = \"/sac-merchant-api/v1/payouts\";",
							"",
							"function generatePayCodeSignature(jsonBody, key, client, req, tgl, target) {",
							"    var digestSHA256 = CryptoJS.SHA256(CryptoJS.enc.Utf8.parse(jsonBody));",
							"    var digestBase64 = CryptoJS.enc.Base64.stringify(digestSHA256);",
							"    console.log('Komponen Digest: ' + jsonBody)",
							"    console.log('Digest sha256: ' + digestSHA256)",
							"    console.log('Digest: ' + digestBase64)",
							"    var signatureComponents = 'Client-Id:' + client +'\\n'+",
							"    'Request-Id:' + req +'\\n'+",
							"    'Request-Timestamp:' + tgl + '\\n'+",
							"    'Request-Target:'+ target + '\\n'+",
							"    'Digest:' + digestBase64;",
							"    var signatureHmacSha256 = CryptoJS.HmacSHA256(signatureComponents,key);",
							"    var signatureBase64 = CryptoJS.enc.Base64.stringify(signatureHmacSha256);",
							"    console.log('Komponen signature: ' + signatureComponents)",
							"    console.log('signature hmacSHA256: ' + signatureHmacSha256)",
							"    console.log('Signature: ' + signatureBase64)",
							"    return ('HMACSHA256='+signatureBase64); ",
							"}",
							"",
							"var signature = generatePayCodeSignature(pm.request.body, key, clientid, requestid, timestamp, targetPath);",
							"var Header = require('postman-collection').Header",
							"pm.environment.set(\"Client_Id\", clientid);",
							"pm.environment.set(\"Request_Id\", requestid);",
							"pm.environment.set(\"Signature\", signature);",
							"pm.environment.set(\"Request-Timestamp\", timestamp);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Client-Id",
						"value": "{{Client_Id}}",
						"type": "text"
					},
					{
						"key": "Request-Id",
						"value": "{{Request_Id}}",
						"type": "text"
					},
					{
						"key": "Signature",
						"value": "{{Signature}}",
						"type": "text"
					},
					{
						"key": "Request-Timestamp",
						"value": "{{Request-Timestamp}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n    \"account\": \n    { \n        \"id\":\"SAC-3863-1631259739303\" \n    }, \n    \"payout\": \n    { \n        \"amount\": 10001, \n        \"invoice_number\":\"WDR/1410/TEST777\" \n    }, \n    \"beneficiary\": \n    { \n        \"bank_code\":\"BNINIDJA\", \n        \"bank_account_number\":712739123020001, \n        \"bank_account_name\":\"Ria Florensi\" \n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_uat}}/sac-merchant-api/v1/payouts",
					"host": [
						"{{api_uat}}"
					],
					"path": [
						"sac-merchant-api",
						"v1",
						"payouts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Transfers",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var key = \"SK-66gGmm9iHQurcc96pDIl\";",
							"var clientid = \"MCH-0008-8556643785417\";",
							"var requestid = _.random(1, 100000);",
							"var timestamp = new Date().toISOString().slice(0, 19)+\"Z\";",
							"var targetPath = \"/sac-merchant-api/v1/transfers\";",
							"",
							"function generatePayCodeSignature(jsonBody, key, client, req, tgl, target) {",
							"    var digestSHA256 = CryptoJS.SHA256(CryptoJS.enc.Utf8.parse(jsonBody));",
							"    var digestBase64 = CryptoJS.enc.Base64.stringify(digestSHA256);",
							"    console.log('Komponen Digest: ' + jsonBody)",
							"    console.log('Digest sha256: ' + digestSHA256)",
							"    console.log('Digest: ' + digestBase64)",
							"    var signatureComponents = 'Client-Id:' + client +'\\n'+",
							"    'Request-Id:' + req +'\\n'+",
							"    'Request-Timestamp:' + tgl + '\\n'+",
							"    'Request-Target:'+ target + '\\n'+",
							"    'Digest:' + digestBase64;",
							"    var signatureHmacSha256 = CryptoJS.HmacSHA256(signatureComponents,key);",
							"    var signatureBase64 = CryptoJS.enc.Base64.stringify(signatureHmacSha256);",
							"    console.log('Komponen signature: ' + signatureComponents)",
							"    console.log('signature hmacSHA256: ' + signatureHmacSha256)",
							"    console.log('Signature: ' + signatureBase64)",
							"    return ('HMACSHA256='+signatureBase64); ",
							"}",
							"",
							"var signature = generatePayCodeSignature(pm.request.body, key, clientid, requestid, timestamp, targetPath);",
							"var Header = require('postman-collection').Header",
							"pm.environment.set(\"Client_Id\", clientid);",
							"pm.environment.set(\"Request_Id\", requestid);",
							"pm.environment.set(\"Signature\", signature);",
							"pm.environment.set(\"Request-Timestamp\", timestamp);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Client-Id",
						"type": "text",
						"value": "{{Client_Id}}"
					},
					{
						"key": "Request-Id",
						"type": "text",
						"value": "{{Request_Id}}"
					},
					{
						"key": "Signature",
						"type": "text",
						"value": "{{Signature}}"
					},
					{
						"key": "Request-Timestamp",
						"type": "text",
						"value": "{{Request-Timestamp}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n    \"transfer\":\n    {\n        \"origin\" : \"SAC-6211-1631498282393\",\n        \"destination\" : \"SAC-3414-1631259683970\",\n        \"amount\" : 7000,\n        \"invoice_number\" : \"TEST-UAT-2\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api_uat}}/sac-merchant-api/v1/transfers",
					"host": [
						"{{api_uat}}"
					],
					"path": [
						"sac-merchant-api",
						"v1",
						"transfers"
					]
				}
			},
			"response": []
		}
	]
}
